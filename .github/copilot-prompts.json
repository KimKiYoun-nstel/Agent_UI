[
  {
    "name": "mvvm-audit",
    "description": "MVVM 위반/중복/패턴 일관성 점검(선택 코드 기준)",
    "prompt": "아래 선택된 코드에서 MVVM 위반(뷰 로직, code-behind 의존, 데이터/프레젠테이션 혼합), 중복 구현, 기존 패턴과의 불일치를 찾아 근거와 수정안을 제시해줘. 필요하면 리팩터링 전/후 스니펫을 보여줘: {selection}{input}"
  },
  {
    "name": "binding-check",
    "description": "XAML 바인딩/검증/리소스 사용 점검",
    "prompt": "선택한 XAML의 바인딩(경로, Mode, UpdateSourceTrigger, DataContext 가정)과 Validation(필수/형식/범위), 리소스 키 사용 여부를 점검해줘. 깨진 바인딩이나 매직 넘버가 있으면 원인과 수정 패치를 전/후 비교로 제시: {selection}{input}"
  },
  {
    "name": "async-safety",
    "description": "비동기/스레딩 안전성 점검(Deadlock/UI freeze 방지)",
    "prompt": "선택 코드의 비동기 흐름을 점검해줘. await 누락, 동기 호출로 인한 UI freeze, ConfigureAwait 필요성, CancellationToken 처리, 예외 전파/사용자 피드백(Status) 누락을 확인하고 안전한 패턴으로 수정 제안 및 패치 예시를 제시: {selection}{input}"
  },
  {
    "name": "exception-contract",
    "description": "예외 처리/로깅/상태 피드백 계약 점검",
    "prompt": "서비스 경계에서의 예외 처리, 의미 있는 메시지 변환, ViewModel의 Status/Logs 갱신, 사용자 알림 흐름이 일관적인지 검사해줘. 누락/과잉/중복이 있으면 이유와 함께 수정 가이드를 제시하고, 필요한 최소 변경 패치를 제공: {selection}{input}"
  },
  {
    "name": "consistency-guard",
    "description": "명명 규칙/주석 규칙/리소스 키·스타일 일관성 점검",
    "prompt": "선택 코드가 프로젝트 규칙(PascalCase/CamelCase, Async 접미사, Doxygen /// 주석, Theme/Styles.xaml 리소스 키 활용)을 따르는지 점검하고, 어긋난 부분을 목록화해줘. 각 항목별로 간단한 자동 수정 패치를 함께 제시: {selection}{input}"
  }
]
